<Window x:Class="WznGwent.ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WznGwent"
        mc:Ignorable="d"
        Title="ConfigWindow" Name="rootWindow" Height="550" Width="840" MinWidth="840" MinHeight="550" FontSize="11" LocationChanged="windowLocationChanged">
    <Grid Background="Black" Name="mainGrid" SizeChanged="mainGridSizeChanged"  MinWidth="830" MinHeight="540">
        <Grid.Resources>
            <local:imageDirectoryConverter x:Key="imageDirConverter"/>
            <local:toVisibilityConverter x:Key="elementVisibilityConverter"/>
            <local:AbilityEllipseRowConverter x:Key="abilityEllipseRowConverter"/>
            <local:cardWidthConverter x:Key="cardWidthConverter"/>
            <local:basedCardWidthConverter x:Key="basedCardWidthConverter"/>
            <local:remainingCardsConverter x:Key="remainingCardsConverter"/>
            <local:CardCollapsedConverter x:Key="cardCollapsedConverter"/>
            <local:LimitTipVisibilityConverter x:Key="limitTipVisibilityConverter"/>
            <local:BlurConverter x:Key="blurConverter"/>
            <local:InfoColorConverter x:Key="infoColorConverter"/>
            <local:RemainingCardsShowConverter x:Key="remainingCardsShowConverter"/>
            <local:SaveEnablityConverter x:Key="saveEnablityConverter"/>           
            <local:ColorConverter x:Key="colorConverter"/>
            <ControlTemplate x:Key="normalCardFace" TargetType="ToggleButton" >
                <Border Height="160" Width="82" BorderBrush="Black" BorderThickness="2">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.Background>
                                <ImageBrush ImageSource="{Binding Face, Converter={StaticResource imageDirConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill"/>
                            </Grid.Background>
                        </Grid>
                        <Border Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="SaddleBrown" >
                            <Border.Background>
                                <ImageBrush ImageSource="images\cardDescription.png" Stretch="UniformToFill"/>
                            </Border.Background>
                            <TextBlock Grid.Column="1" Text="{Binding Name}" FontSize="10" Foreground="Maroon" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center"/>
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>
            <DataTemplate DataType="{x:Type local:CardFace}">
                <Border Name="currentCard" BorderBrush="Black" BorderThickness="6" MouseUp="currentCardMouseUp" CornerRadius="2" Padding="0">
                    <Border.Visibility>
                        <MultiBinding Converter="{StaticResource cardCollapsedConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding Path="Amount" />
                            <Binding Path="Limit" />
                            <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}"/>
                        </MultiBinding>
                    </Border.Visibility>
                    <Border.Width>
                        <Binding ElementName="rootWindow" Path="ActualWidth" Mode="OneWay" Converter="{StaticResource cardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                    </Border.Width>
                    <Border.Height>
                        <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="2" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                    </Border.Height>
                    <Border.Background>
                        <SolidColorBrush />
                    </Border.Background>
                    <Border.Triggers>
                        <EventTrigger RoutedEvent="MouseEnter">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" From="Black" To="Chocolate" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ColorAnimation Duration="0:0:2" AutoReverse="True" RepeatBehavior="Forever" From="Black" To="Chocolate" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="MouseLeave">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Duration="0:0:0" To="Black" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"/>
                                    <ColorAnimation Duration="0:0:0" To="Black" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Border.Triggers>

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="6*"/>
                            <RowDefinition Height="2*"/>
                        </Grid.RowDefinitions>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=radiusMask}" />
                        </Grid.OpacityMask>
                        <Border Name="radiusMask" Background="Black" BorderBrush="Transparent" BorderThickness="0.1" CornerRadius="6">
                        </Border>

                        <Grid Grid.Row="0" Name="faceGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.Background>
                                <ImageBrush ImageSource="{Binding Face, Converter={StaticResource imageDirConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill"/>
                            </Grid.Background>
                            <Canvas>
                                <Image Source="images\HeroCorner.png" VerticalAlignment="Top" HorizontalAlignment="Left" Visibility="{Binding Hero, Converter={StaticResource elementVisibilityConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged,ConverterParameter='heroCardAbility'}">
                                    <Image.Height>
                                        <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="0.5" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                    </Image.Height>
                                </Image>
                            </Canvas>
                            <Ellipse Visibility="{Binding Power, Converter={StaticResource elementVisibilityConverter},ConverterParameter=powerElements, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="0"  
                                     StrokeThickness="{Binding ActualWidth, ElementName=currentCard, Converter={StaticResource basedCardWidthConverter}, ConverterParameter=0.02, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                                     Stroke="Chocolate" Margin="0">
                                <Ellipse.Fill>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="0.5,1">
                                        <GradientStop Color="{Binding Hero, Converter={StaticResource colorConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Offset="0.55" />
                                        <GradientStop Color="Gray" Offset="1.0" />
                                    </LinearGradientBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Label Visibility="{Binding Power, Converter={StaticResource elementVisibilityConverter}, Mode=OneWay,ConverterParameter=powerElements,UpdateSourceTrigger=PropertyChanged}" Content="{Binding Power, Mode=TwoWay}" 
                                   Foreground="{Binding Hero, Converter={StaticResource colorConverter}, Mode=OneWay,ConverterParameter=reverse, UpdateSourceTrigger=PropertyChanged}" FontWeight="Medium"
                                   Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Label.FontSize>
                                    <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="cardText" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                </Label.FontSize>
                            </Label>

                            <Ellipse Visibility="{Binding Range, Converter={StaticResource elementVisibilityConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Grid.Column="0" Grid.Row="2" 
                                     StrokeThickness="{Binding ActualWidth, ElementName=currentCard, Converter={StaticResource basedCardWidthConverter}, ConverterParameter=0.02, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                                     Stroke="Chocolate" Margin="1" >
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding Range, Converter={StaticResource imageDirConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Stretch="Fill"></ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                            <Ellipse Visibility="{Binding Ability, Converter={StaticResource elementVisibilityConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  Grid.Column="0" 
                                     StrokeThickness="{Binding ActualWidth, ElementName=currentCard, Converter={StaticResource basedCardWidthConverter}, ConverterParameter=0.02, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" 
                                     Stroke="Chocolate" Margin="1">
                                <Grid.Row>
                                    <MultiBinding Converter="{StaticResource abilityEllipseRowConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                                        <Binding Path="Ability" />
                                        <Binding Path="Range" />
                                    </MultiBinding>
                                </Grid.Row>
                                <Ellipse.Fill>
                                    <ImageBrush ImageSource="{Binding Ability, Converter={StaticResource imageDirConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Stretch="Fill"></ImageBrush>
                                </Ellipse.Fill>
                            </Ellipse>
                        </Grid>

                        <Border  Grid.Row="1" BorderThickness="{Binding ActualWidth, ElementName=currentCard, Converter={StaticResource basedCardWidthConverter},ConverterParameter='splitBoard', Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" BorderBrush="SaddleBrown">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="6*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.Background>
                                    <ImageBrush ImageSource="{Binding Hero, Converter={StaticResource imageDirConverter},ConverterParameter='heroCrad', Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Stretch="UniformToFill"/>
                                </Grid.Background>
                                <TextBlock Grid.Column="1" Text="{Binding Name}"  FontSize="{Binding ActualWidth, ElementName=currentCard, Mode=OneWay, ConverterParameter='cardText', Converter={StaticResource basedCardWidthConverter}, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="Maroon" TextWrapping="Wrap" TextAlignment="Center" HorizontalAlignment="Center" Padding="0"
                                           Margin="{Binding ActualWidth, ElementName=currentCard, Mode=OneWay, ConverterParameter='0.04', Converter={StaticResource basedCardWidthConverter}, UpdateSourceTrigger=PropertyChanged}"/>
                                <Grid Grid.Column="0" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="2*"/>
                                        <RowDefinition Height="1*"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.Row="1" Orientation="Horizontal" Visibility="{Binding Faction, Converter={StaticResource elementVisibilityConverter}, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}">
                                        <Image Source="images\cardAmount.png" VerticalAlignment="Center">
                                            <Image.Height>
                                                <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="0.1" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                            </Image.Height>
                                        </Image>

                                        <Label VerticalAlignment="Center" Padding="0" Margin="0" Content="×" Foreground="#5A4424">
                                            <Label.FontSize>
                                                <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="cardText" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                            </Label.FontSize>
                                        </Label>
                                        <TextBlock  Name="remainingAmountLabel" Text="{Binding Amount, Mode=TwoWay,Converter={StaticResource remainingCardsConverter}, UpdateSourceTrigger=PropertyChanged}" 
                                                    Foreground="#5A4424" TextAlignment="Center" Visibility="Collapsed" Tag="{Binding Limit, Mode=OneTime}" VerticalAlignment="Center" />
                                        <TextBlock Foreground="#5A4424" TextAlignment="Center"
                                                    Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}},Path=Tag,Converter={StaticResource elementVisibilityConverter},ConverterParameter='remaining'}" 
                                                    VerticalAlignment="Center">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource remainingCardsShowConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                                                    <Binding Path="Amount" />
                                                    <Binding Path="Limit" />
                                                    <Binding Path="Tag" RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type ItemsControl}}"/>
                                                </MultiBinding>
                                                <!--<Binding ElementName="remainingAmountLabel" Path="Text" Mode="OneWay" Converter="{StaticResource remainingCardsShowConverter}" UpdateSourceTrigger="PropertyChanged" />-->
                                            </TextBlock.Text>
                                            <TextBlock.FontSize>
                                                <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="cardText" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                            </TextBlock.FontSize>
                                        </TextBlock>
                                        <TextBlock Name="deckAmountLabel" Text="{Binding Amount, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Foreground="#5A4424" TextAlignment="Center" 
                                                    Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                                         AncestorType={x:Type ItemsControl}},
                                                         Path=Tag,Converter={StaticResource elementVisibilityConverter},ConverterParameter='deck'}" VerticalAlignment="Center">
                                            <TextBlock.FontSize>
                                                <Binding ElementName="currentCard" Path="ActualWidth" Mode="OneWay" ConverterParameter="cardText" Converter="{StaticResource basedCardWidthConverter}" UpdateSourceTrigger="PropertyChanged" />
                                            </TextBlock.FontSize>
                                        </TextBlock>
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </Border>
                    </Grid>
                </Border>
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.Resources>
                <local:tabNameConverter x:Key="selectedTabNameConverter"/>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition />
                <ColumnDefinition Width="100"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" VerticalAlignment="Bottom">
                <Label Content="卡牌收藏" FontSize="15" Foreground="White"/>
                <Label Content="{Binding SelectedIndex,ElementName=remaingTab,Converter={StaticResource selectedTabNameConverter}}" Foreground="White"/>
            </StackPanel>
            <StackPanel Name="leaderStack" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,10,0,0">
                <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Center">
                    <Image Source="images\Tw3_gwent_deck_Northern_Realms.png" Width="25" Margin="0"/>
                    <Label Content="北方领域" FontSize="15" Foreground="White"/>
                </StackPanel>
                <Label Margin="0" Content="{Binding Description,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Top" HorizontalAlignment="Center" Foreground ="#827A6E" />
            </StackPanel>
            <StackPanel Grid.Column="2" VerticalAlignment="Bottom" HorizontalAlignment="Right">
                <Label Content="我的牌组" FontSize="15" Foreground="White" HorizontalAlignment="Right"/>
                <Label Content="{Binding SelectedIndex,ElementName=deckTab,Converter={StaticResource selectedTabNameConverter}}" Foreground="White" HorizontalAlignment="Right"/>
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="TabItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="TabItem">
                                <Grid Name="Panel" Background="Black">
                                    <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="22,2"/>
                                    <Image Height="20"  Visibility="{TemplateBinding IsSelected, Converter={StaticResource elementVisibilityConverter}}"  Source="{TemplateBinding Tag, Converter={StaticResource imageDirConverter},ConverterParameter='Sel'}"/>
                                    <Image Height="20"  Visibility="{TemplateBinding IsSelected, Converter={StaticResource elementVisibilityConverter},ConverterParameter='reverse'}"  Source="{TemplateBinding Tag, Converter={StaticResource imageDirConverter}}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                        <!--<Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="Gray" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Panel" Property="Background" Value="Black" />
                                        </Trigger>-->
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <!--Setter Property="Background" Value="Orange"></Setter-->
                                        <Setter Property="BitmapEffect">
                                            <Setter.Value>
                                                <OuterGlowBitmapEffect GlowSize="20" Noise=".3" GlowColor="Red"></OuterGlowBitmapEffect>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type Thumb}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Thumb}">
                                <Grid>
                                    <!--滚动条颜色-->
                                    <Border BorderThickness="1" BorderBrush="#827A6E" CornerRadius="1" />
                                    <Border Background="#827A6E"  Margin="3" CornerRadius="1" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <!--干掉滚动条上下按钮-->
                <Style TargetType="{x:Type RepeatButton}">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type RepeatButton}">
                                <Rectangle Width="0" Height="0"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type ScrollBar}">
                    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                    <Setter Property="Background" Value="#5A4424"/>
                    <Setter Property="Margin" Value="0,1,1,6"/>
                    <Setter Property="MinWidth" Value="5"/>
                    <Setter Property="Opacity" Value="0.9"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid SnapsToDevicePixels="true">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="auto"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <RepeatButton  Grid.Row="0" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                    <!--很少有控件要求特定的名称来做模板，之歌滚动条就是，也就是WPF开发者懈怠了，没做接口，坑-->
                                    <Track  x:Name="PART_Track"  Grid.Row="1" IsEnabled="{TemplateBinding IsMouseOver}" IsDirectionReversed="true">
                                        <Track.Thumb>
                                            <Thumb />
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton Grid.Row="2" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="160"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TabControl Name="remaingTab" BorderThickness="0" Background="Black" Grid.Column="0">
                <TabItem Background="Black" Tag="cardAmount" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsAll" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="closedCombatTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsCloseCombat" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="rangedTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsRanged" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="siegeTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsSiege" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="heroTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsHero" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="weatherTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsWeather" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="magicTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="remainingCardsMagic" Tag="remaining">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
            <TabControl Name="deckTab" BorderThickness="0" Background="Black" Grid.Column="2">
                <TabItem Background="Black" Tag="cardAmount" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsAll" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="closedCombatTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsCloseCombat" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="rangedTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsRanged" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="siegeTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsSiege" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="heroTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsHero" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="weatherTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsWeather" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
                <TabItem Background="Black" Tag="magicTab" >
                    <ScrollViewer VerticalScrollBarVisibility="Auto" Background="Black" Margin="0,4">
                        <ItemsControl x:Name="deckCardsMagic" Tag="deck">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Horizontal" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
            <StackPanel x:Name="infoStack" Grid.Column="1" VerticalAlignment="Center">
                <Label Content="领袖牌" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0"/>
                <ToggleButton  Name="leadCard" Template="{StaticResource normalCardFace}"  Margin="0,0,0,20">
                    <!--<ToggleButton.RenderTransform>
                        <ScaleTransform />
                    </ToggleButton.RenderTransform>

                    <ToggleButton.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation  
                    Storyboard.TargetProperty="(ToggleButton.RenderTransform).(ScaleTransform.ScaleX)" AutoReverse="True"
                    RepeatBehavior="Forever" Duration="00:00:2" From="0" To="2.0">

                                    </DoubleAnimation>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </ToggleButton.Triggers>-->

                </ToggleButton>
                <Label Content="牌组卡牌总数" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0" />
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="images\deckAmount.png" Width="20" Margin="5,0"/>
                    <TextBlock Text="{Binding AllCardsAmount, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground ="#827A6E" HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                </StackPanel>
                
                <Label Content="单位牌数量" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="images\unitsAmount.png" Width="15" Margin="5,0"/>
                    <TextBlock  VerticalAlignment="Bottom" Text="{Binding UnitCardsAmount, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Name ="unitsCardsTextbox"
                                Foreground ="{Binding UnitCardsAmount, Mode=OneWay, Converter={StaticResource infoColorConverter},ConverterParameter=units, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                </StackPanel>
                
                <Label Content="特殊牌" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="images\ununitsAmount.png" Width="15" Margin="5,0"/>
                    <TextBlock Text="{Binding MagicCardsAmount, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"  Name ="magicCardsTextbox"
                               Foreground ="{Binding MagicCardsAmount, Mode=OneWay, Converter={StaticResource infoColorConverter}, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                    <TextBlock Foreground ="{Binding MagicCardsAmount, Mode=OneWay, Converter={StaticResource infoColorConverter}, UpdateSourceTrigger=PropertyChanged}" Text="/10" HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                </StackPanel>

                <Label Content="总战力" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="images\powerAmount.png" Width="15" Margin="5,0"/>
                    <TextBlock Text="{Binding PowerAmount, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground ="#827A6E" 
                               HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                </StackPanel>

                <Label Content="英雄牌" Foreground ="#827A6E" HorizontalAlignment="Center" Padding="0"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Image Source="images\heroAmount.png" Width="15" Margin="5,0"/>
                    <TextBlock Text="{Binding HeroCardsAmount, Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" Foreground ="#827A6E" 
                               HorizontalAlignment="Center" Margin="0,0,0,2" Padding="0"/>
                </StackPanel>
                <Popup IsOpen="{Binding ElementName=leadCard,Path=IsChecked}" Name="leaderPopup"
                       PlacementTarget="{Binding ElementName=mainGrid, UpdateSourceTrigger=PropertyChanged}" 
                       Height="{Binding MinHeight, ElementName=mainGrid}" 
                       Width="{Binding MinWidth, ElementName=mainGrid}" 
                       AllowsTransparency="True" PopupAnimation="Slide" StaysOpen="False" Placement="Center">
                    <Grid>
                        <Grid.Resources>
                            <Style x:Key="FocusVisual">
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="2" SnapsToDevicePixels="true" 
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                       StrokeThickness="1" StrokeDashArray="1 2" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style x:Key="NavigationButtonStyle" TargetType="{x:Type RepeatButton}">
                                <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
                                <Setter Property="Foreground" Value="#FF636161" />
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Padding" Value="1" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Grid>
                                                <Border x:Name="border" SnapsToDevicePixels="true" Background="#FFAAA4A4" Opacity="0.79" />
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" RecognizesAccessKey="True"
                                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                                  Margin="{TemplateBinding Padding}"  
                                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FFCDCBCB" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="#FF272727" />
                                                    <Setter Property="TextElement.Foreground" Value="White" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="75" />
                                <Setter Property="Height" Value="40" />
                            </Style>
                            <Style TargetType="{x:Type local:FlipView}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type local:FlipView}" >
                                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}">
                                                <Grid ClipToBounds="True" x:Name="PART_Container">
                                                    <local:FlipViewPanel x:Name="PART_Root" IsManipulationEnabled="True" 
                                                                         Background="Transparent" 
                                                                         >
                                                        <ContentControl x:Name="PART_PrePreviousItem"
                                                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentControl x:Name="PART_PreviousItem" 
                                                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentControl x:Name="PART_NextItem" 
                                                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentControl x:Name="PART_NexNextItem" 
                                                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                        <ContentControl x:Name="PART_CurrentItem"
                                                                        ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                    </local:FlipViewPanel>
                                                    <Grid VerticalAlignment="Center" x:Name="PART_ButtonPanel" Visibility="Collapsed">
                                                        <RepeatButton x:Name="PART_NextButton" FontFamily="Segoe UI Symbol" Content="" FontSize="18"
                                                                      Style="{StaticResource NavigationButtonStyle}"
                                                                      Command="{x:Static local:FlipView.NextCommand}" HorizontalAlignment="Right" />
                                                        <RepeatButton x:Name="PART_PreviousButton" FontFamily="Segoe UI Symbol" Content="" FontSize="18"
                                                                      Style="{StaticResource NavigationButtonStyle}"
                                                                      Command="{x:Static local:FlipView.PreviousCommand}" HorizontalAlignment="Left" />
                                                    </Grid>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="IsMouseOver" Value="True" />
                                                        <Condition Property="IsStylusOver" Value="False" />
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Visibility" Value="Visible" TargetName="PART_ButtonPanel" />
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Border Width="{Binding ActualWidth, ElementName=mainGrid, UpdateSourceTrigger=PropertyChanged}" 
                                Height="{Binding ActualHeight, ElementName=mainGrid, UpdateSourceTrigger=PropertyChanged}" Background="Black" Opacity="0.5" Margin="0" />
                        <!--<ToggleButton Height="20" Width="40" Opacity="1" IsChecked="{Binding ElementName=leadCard,Path=IsChecked,Mode=TwoWay}"/>-->
                        <local:FlipView x:Name="leadersFlipView" Grid.Column="1" Background="Transparent" itemGap="0.3" 
                                        SelectedIndex="0" SelectionChanged="newLeaderSelected">
                            <local:FlipView.ItemTemplate>
                                <DataTemplate>
                                    <ToggleButton IsChecked="{Binding ElementName=leadCard,Path=IsChecked,Mode=TwoWay}" Template="{StaticResource normalCardFace}" Margin="0,0,0,20">
                                    </ToggleButton>
                                </DataTemplate>
                            </local:FlipView.ItemTemplate>
                        </local:FlipView>
                    </Grid>
                </Popup>
                <Button x:Name="saveBtn" Click="saveBtnClick" Height="30" Width="80" Content="确定" Margin="0,20">
                    <Button.Effect>
                        <BlurEffect>
                            <BlurEffect.Radius>
                                <MultiBinding Converter="{StaticResource blurConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                                    <Binding ElementName="magicCardsTextbox" Path="Foreground"/>
                                    <Binding ElementName="unitsCardsTextbox" Path="Foreground"/>
                                </MultiBinding>
                            </BlurEffect.Radius>
                        </BlurEffect>
                    </Button.Effect>
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource saveEnablityConverter}" Mode="OneWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding ElementName="magicCardsTextbox" Path="Foreground"/>
                            <Binding ElementName="unitsCardsTextbox" Path="Foreground"/>
                        </MultiBinding>
                    </Button.IsEnabled>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Loaded">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.7"  Duration="0:0:4" AutoReverse="True" RepeatBehavior="Forever" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
